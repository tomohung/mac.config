""" Map leader to space ---------------------
let mapleader=" "

""" Plugins  --------------------------------
set surround
set commentary
set NERDTree
set easymotion
set matchit
set exchange
set textobj-indent
" set multiple-cursors

""" Plugin settings -------------------------

""" Common settings -------------------------
set showmode
set scrolloff=1
" set hlsearch " nohighlight takes more time!
set incsearch
set relativenumber number
set ignorecase " case insensitive"
set smartcase " case insensitive, only sensitive when first char is capital, and only used when igorenocase is on
set gdefault " the :substitute flag 'g' is by default
set clipboard+=unnamed

""" Idea specific settings ------------------
set ideajoin
" set ideastatusicon=gray
" set idearefactormode=keep

nmap ,p "0p
nmap ,P "0P
imap z,p <Esc>"0pa
imap z,P <Esc>"0Pa
:nmap z, vi)
:nmap z. vi}
:nmap z) vi)
:nmap z} vi}
:nmap z> vit
:nmap c> cit
:nmap z" vi"
:nmap z' vi'
:nmap zcc ci"
:nmap zaa ca"
:nmap zxx ci]
":imap jj <Esc>
:nmap <BS> a<BS>
:nmap zh ^
:nmap zl $
:vmap zh ^
:vmap zl $
":nmap hc ^C
:nmap zb ciw
:vmap zb <Esc>ciw
":imap zd <Esc>dd
"nmap qq ZQ
"nmap zq :wq<CR>
nmap zwc viw :action StringManipulation.ToScreamingSnakeCase<CR><ESC>b
imap zwc <ESC>viw :action StringManipulation.ToScreamingSnakeCase<CR><ESC>b

imap <F1> <ESC>Vzl%ygPO<ESC>j " only works at the later pair, e.g. }]end
nmap <F1> Vzl%ygPO<ESC>j
imap <A-F1> <CR><Esc>y?it <CR>kPNf'lzz
nmap <A-F1> y?it <CR>kPNf'lzz

nmap zn :action GotoNextError<CR>
nmap zk :action GotoPreviousError<CR>
nmap zgc zz:action CheckinProject<CR>

nmap zra zz:action ReformatCode<CR>:action Rerun<CR><ESC>

imap zra <Esc>zz:action ReformatCode<CR>:action Rerun<CR><ESC>
nmap zrn zz:action ReformatCode<CR><Action>(RunClass)
imap zrn <ESC>zz:action ReformatCode<CR><Action>(RunClass)
nmap zrd zz:action ReformatCode<CR><Action>(Debug)
vmap zrd <ESC>zz:action ReformatCode<CR><Action>(Debug)

nmap zf mbgg :action RunClass<CR><ESC>'b
imap zf <ESC>mbgg :action RunClass<CR><ESC>'b
nmap zif ddIels<ESC>==
imap zif <ESC>ddIels<ESC>==

map zrr :action RenameElement<CR>

map zri :action Inline<CR>
imap zri <Esc>:action Inline<CR>
map zrf :action IntroduceField<CR>
imap zrf <Esc>:action IntroduceField<CR>
map zrp :action IntroduceParameter<CR>
imap zrp <Esc>:action IntroduceParameter<CR>
map zrc :action IntroduceConstant<CR>
imap zrc <ESC>:action IntroduceConstant<CR>
nmap zrl :action rspec.LetIntroduce<CR><ESC>
vmap zrl :action rspec.LetIntroduce<CR><ESC>

nmap zsp f":action IntroduceParameter<CR>

map zrv :action IntroduceVariable<CR>
vmap zrv <Esc>:action IntroduceVariable<CR>
imap zrv <Esc>:action IntroduceVariable<CR>
"vmap zrm :<bs><bs><bs><bs><bs>action VimVisualSwapSelections<CR>:action ExtractMethod<CR><ESC>
nmap M :action ExtractMethod<CR>
vmap M :action ExtractMethod<CR><ESC>
nmap zrm :action ExtractMethod<CR>
vmap zrm :action ExtractMethod<CR>
vmap M :action ExtractMethod<CR>
vmap <leader>s :action SurroundWithLiveTemplate<CR>
map zrt :action SearchEverywhere<CR>
imap zrt <Esc>:action SearchEverywhere<CR>
map zro :action Move<CR>
imap zro <Esc>:action Move<CR>
map <C-y> :action EditorDuplicateLines<CR><ESC>
imap <C-y> <Esc>:action EditorDuplicateLines<CR>
map <C-A-K> :action MoveLineUp<CR>:action VimAutoIndentLines<CR>
imap <C-A-K> <Esc>:action MoveLineUp<CR>:action VimAutoIndentLines<CR>
map <C-A-J> :action MoveLineDown<CR>:action VimAutoIndentLines<CR>
imap <C-A-J> <Esc>:action MoveLineDown<CR>:action VimAutoIndentLines<CR>
map <A-D> :action EditorDeleteLine<CR>
imap <A-D> <Esc>:action EditorDeleteLine<CR>
map <A-K> :action MethodUp<CR>
imap <A-K> :action MethodUp<CR>
map <A-J> :action MethodDown<CR>
imap <A-J> :action MethodDown<CR>
nmap <C-J> j^
imap <C-J> <ESC>j^
nmap <C-K> k^
imap <C-K> <ESC>k^
imap <C-o> <ESC>O
:nmap ,m :action FileStructurePopup<CR>

nmap ,g :action Generate<CR>
nmap ,c :action NewElementSamePlace<CR>

nmap <Space>w :action AceAction<CR>
nmap <Space>v :action AceTargetAction<CR>

nmap \\yv ?if<CR>wvt:y
nmap \\v ?if<CR>wvt::action IntroduceVariable<CR><Esc>
nmap \\s :action ChangeSignature<CR>
imap <A-;> <Esc>:action IntroduceVariable<CR>
nmap <A-;> :action IntroduceVariable<CR>
imap <A-.> self.
nmap <A-.> iself.
nmap <A-L> :set rnu!<CR>
nmap zsi ^df:j$ps else <Esc>Jde

""" Mappings --------------------------------
nmap <leader>gb :action Annotate<CR>
vmap <leader>gb :action Annotate<CR>

nmap <leader>cf :action CopyContentRootPath<CR>
nmap <leader>cn :action CopyPathWithLineNumber<CR>

nmap <leader>e :action SelectInProjectView<CR>
nmap <leader>tt :action GotoTest<CR>
nmap <leader>tr :action GotoRelated<CR>
nmap <leader>tm :action MoveEditorToOppositeTabGroup<CR>

nmap <leader>gh :action Github.Open.In.Browser<CR>
vmap <leader>gh :action Github.Open.In.Browser<CR>

nmap <leader>tb :action ToggleLineBreakpoint<CR>
vmap <leader>tb :action ToggleLineBreakpoint<CR>

nmap <leader>no :<C-u>nohlsearch<CR>

nmap <leader>= :action ReformatCode<CR>
vmap <leader>= :action ReformatCode<CR>

nmap <leader>/  yiw :action FindInPath<CR>
vmap <leader>/  :action FindInPath<CR>

nmap <leader><Tab> <C-S-6>
vmap <leader><Tab> <Esc><C-S-6>
nmap <C-S-k> <Action>(MoveStatementUp)
vmap <C-S-k> <Action>(MoveStatementUp)
nmap <C-S-j> <Action>(MoveStatementDown)
vmap <C-S-j> <Action>(MoveStatementDown)

nmap <C-p> :action GotoFile<CR>
nmap <leader>fr :action RecentFiles<CR>
nmap <leader>fl :action RecentLocations<CR>
nmap <leader>fs :action FileStructurePopup<CR>

nmap <C-h> :action PrevSplitter<CR>
vmap <C-h> :action PrevSplitter<CR>

nmap <C-l> :action NextSplitter<CR>
vmap <C-l> :action NextSplitter<CR>

nmap ]<space>    o<Esc>k
vmap ]<space>    <Esc>o<Esc>k
nmap [<space>    O<Esc>
vmap [<space>    <Esc>O<Esc>

" insert mode move to begin/end
imap <C-a> <ESC>I
imap <C-e> <ESC>A
vmap <C-a> ^
vmap <C-e> $

nmap <leader>R :action Refactorings.QuickListPopupAction<CR>
vmap <leader>R :action Refactorings.QuickListPopupAction<CR>
nmap <leader>rn :action RenameElement<CR>
vmap <leader>rn :action RenameElement<CR>
