""" Map leader to space ---------------------
let mapleader=" "

""" Plugins  --------------------------------
set surround
set commentary
set NERDTree
set easymotion
set matchit
set exchange
set vim-indent-object
" set multiple-cursors

""" Plugin settings -------------------------

""" Common settings -------------------------
set showmode
set scrolloff=1
" set hlsearch " nohighlight takes more time!
set incsearch
set relativenumber " number
set ignorecase " case insensitive"
set smartcase " case insensitive, only sensitive when first char is capital, and only used when igorenocase is on
set gdefault " the :substitute flag 'g' is by default
set clipboard+=unnamed

""" Idea specific settings ------------------
set ideajoin
" set ideastatusicon=gray
" set idearefactormode=keep

""" Mappings --------------------------------
" https://github.com/tomohung/mac.config/blob/master/ideavim_actionlist
nmap <leader>gb :action Annotate<CR>
vmap <leader>gb :action Annotate<CR>

nmap <leader>cf :action CopyContentRootPath<CR>
nmap <leader>cn :action CopyPathWithLineNumber<CR>

nmap <leader>e :action SelectInProjectView<CR>
nmap <leader>tt :action GotoTest<CR>
nmap <leader>tr :action GotoRelated<CR>
nmap <leader>tm :action MoveEditorToOppositeTabGroup<CR>

nmap <leader>gh :action Github.Open.In.Browser<CR>
vmap <leader>gh :action Github.Open.In.Browser<CR>

nmap <C-r>:w<CR> :action Rerun<CR>
imap <C-r> <ESC>:w<CR> :action Rerun<CR>

nmap <leader>tn :action RunClass<CR>
nmap <leader>tf gg :action RunClass<CR>
nmap <leader>dd :action DebugClass<CR>

nmap <leader>dm :action ToggleLineBreakpoint<CR>
vmap <leader>dm :action ToggleLineBreakpoint<CR>

nmap <leader>no :<C-u>nohlsearch<CR>

nmap <leader>= :action ReformatCode<CR>
vmap <leader>= :action ReformatCode<CR>

nmap <leader>/  yiw :action FindInPath<CR>
vmap <leader>/  :action FindInPath<CR>

nmap <leader><Tab> <C-S-6>
vmap <leader><Tab> <Esc><C-S-6>

map <C-A-K> :action MoveLineUp<CR>:action VimAutoIndentLines<CR>
imap <C-A-K> <Esc>:action MoveLineUp<CR>:action VimAutoIndentLines<CR>
map <C-A-J> :action MoveLineDown<CR>:action VimAutoIndentLines<CR>
imap <C-A-J> <Esc>:action MoveLineDown<CR>:action VimAutoIndentLines<CR>

nmap <C-p> :action GotoFile<CR>
nmap <leader>fr :action RecentFiles<CR>
nmap <leader>fl :action RecentLocations<CR>
nmap <leader>fs :action FileStructurePopup<CR>

nmap <C-h> :action PrevSplitter<CR>
vmap <C-h> :action PrevSplitter<CR>

nmap <C-l> :action NextSplitter<CR>
vmap <C-l> :action NextSplitter<CR>

nmap ]<space>    o<Esc>k
vmap ]<space>    <Esc>o<Esc>k
nmap [<space>    O<Esc>
vmap [<space>    <Esc>O<Esc>
:nmap <silent> gr "_yiw:s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR><c-o>/\w\+\_W\+<CR><c-l>:nohlsearch<CR>

" insert mode move to begin/end
imap <C-a> <ESC>I
imap <C-e> <ESC>A
vmap <C-a> ^
vmap <C-e> $

nmap <leader>'    :action ActivateTerminalToolWindow<CR>
vmap <leader>'    :action ActivateTerminalToolWindow<CR>

nmap <leader>R :action Refactorings.QuickListPopupAction<CR>
vmap <leader>R :action Refactorings.QuickListPopupAction<CR>
nmap <leader>rn :action RenameElement<CR>
vmap <leader>rn :action RenameElement<CR>

nmap <leader>rv :action IntroduceVariable<CR><ESC>
vmap <leader>rv :action IntroduceVariable<CR><ESC>
nmap <leader>rc :action IntroduceConstant<CR><ESC>
vmap <leader>rc :action IntroduceConstant<CR><ESC>
nmap <leader>rf :action IntroduceField<CR><ESC>
vmap <leader>rf :action IntroduceField<CR><ESC>
nmap <leader>rp :action IntroduceParameter<CR><ESC>
vmap <leader>rp :action IntroduceParameter<CR><ESC>
nmap <leader>rm :action ExtractMethod<CR><ESC>
vmap <leader>rm :action ExtractMethod<CR><ESC>
nmap <leader>rM :action ExtractModule<CR><ESC>
vmap <leader>rM :action ExtractModule<CR><ESC>
nmap <leader>rC :action ExtractClass<CR><ESC>
vmap <leader>rC :action ExtractClass<CR><ESC>
nmap <leader>rl :action rspec.LetIntroduce<CR><ESC>
vmap <leader>rl :action rspec.LetIntroduce<CR><ESC>
nmap <leader>fm :action Move<CR>
vmap <leader>fm :action Move<CR>
nmap <leader>fc :action CopyElement<CR>
vmap <leader>fc :action CopyElement<CR>


imap <A-.> self.
nmap <A-.> iself.
nmap <A-L> :set rnu!<CR>
nmap <C-\> :action AceTargetAction<CR>

nmap <A-p> "0p
imap <A-p> <ESC>"0p
nmap <BS> a<BS

:nmap z, vi)
:nmap z. vi}
:nmap z) vi)
:nmap z} vi}
:nmap z] vi]
:nmap z> vi[t
:nmap c> cit
:nmap z" vi"
:nmap z' vi'
:nmap zxx ci]
